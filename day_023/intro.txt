1. OS Interface(操作系统接口)

1.1 操作系统相关调用和操作
os.name                     获取操作系统平台
os.environ                  一个dictionary包含环境变量的映射关系
os.system()                 用来运行shell命令
os.chdir(dir)               改变当前目录
os.chdir('F:\Wprkspace')    注意符号转义
os.getegid()                得到有效组id
os.getgid()                 得到组id
os.getuid()                 得到用户id
os.geteuid()                得到有效用户id
os.setegid() os.setgid() os.setuid() os.seteuid()   设置id
os.getgroups()              得到用户组名称列表
os.getlogin()               得到用户登录名称
os.getenv                   得到环境变量
os.putenv                   设置环境变量
os.umask                    设置umask
os.system                   利用系统调用，运行cmd命令

1.2 文件目录相关操作
os.getcwd()                 GET Current Working Directory, 获取现在的工作目录
os.listdir()                获取某个目录下的所有文件名
os.remove()                 删除某个文件
os.path.exists()            检验给出的路径是否存在
os.path.isfile()            判断是否为文件
os.path.isdir()             判断是否为文件夹
os.path.abspath(name)       获得绝对路径
os.path.splitext()          分离文件名于扩展名
os.path.split()             把一个路径拆分为 目录 + 文件名 的形式
os.path.join(path, name)    连接目录与文件名或目录
os.path.basename(path)      返回文件名
os.path.dirname(path)       返回文件路径

1.2 shutil 模块 - 高级文件操作
shutil是高级的文件，文件夹，压缩包处理模块

# 将文件内容copy到另一个文件中
shutil.copyfileobj(fsrc, fdst[, length])

# copy文件
shutil.copyfile(src, dst, *, follow_symlinks = True)

# only copy权限。内容、组、用户均不变
shutil.copymode(src, dst)

# 仅拷贝状态信息，包括：mode bits, atime, mtime, flags
shutil.copystat(src, dst)

# copy文件和权限
shutil.copy(src, dst)

# copy文件和状态信息
shutil.copy2(src, dst)

# recursively copy 文件夹
shutil.ignore_patterns(*patterns)
shutil.copytree(src, dst, symlinks=False, ignore=None)

# recursively 删除文件
shutil.rmtree(path[, ignore_errors[, onerror]])

# Rename a file, mv a file
shutil.move(src, dst)

# 创建压缩包并返回文件路径，例如zip、tar
shutil.make_archive(basename, format, ...)

2. 命令行参数
2.1 sys模块
通用实用程序脚本通常需要处理命令行参数。这些参数作为列表储存在sys模块的argv属性中

2.2 argparse模块
argparse模块提供了一种处理命令行参数的机制。它应该总是优先于直接手工处理sys.argv

3. 文件通配符glob
glob模块提供了一个在目录中使用通配符搜索创建文件列表的函数

4. 错误输出重定向和程序终止
错误输出重定向和终止程序使用sys模块，sys模块还具有stdin，stdout，和stderr的属性。
stderr对于发出警告和错误消息非常有用，即使在stdout被重定向后也可以看到它们

sys.stderr.write('Warning, log file not found starting a new one\n')

终止脚本
sys.exit()

5. 字符串模式匹配
5.1 Regular Expression
字符串模式匹配通常也称为regular expression，使用Python中的re标准库，re模块为高级字符串处理提供regular expression工具。
对于复杂的匹配和操作，regular expression提供简洁、优化的解决方案。

